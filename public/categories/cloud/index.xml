<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud on siorellana&#39;s Web Site</title>
    <link>http://siorellana.com/categories/cloud/</link>
    <description>Recent content in Cloud on siorellana&#39;s Web Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://siorellana.com/categories/cloud/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jenkins in a nutshell</title>
      <link>http://siorellana.com/blog/tools/fundamentos-de-jenkins-a4470f4f-64ac-4f17-958a-89b0faa87f1f/</link>
      <pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://siorellana.com/blog/tools/fundamentos-de-jenkins-a4470f4f-64ac-4f17-958a-89b0faa87f1f/</guid>
      <description>Fundamentos de Jenkins En los últimos tiempos, para los que trabajamos en TI escuchar conceptos como Integración Continua (CI), Entrega Continua (CD), Jenkins y Pipelines es muy común y los hemos adoptados dentro de nuestro día a día, pero muchas veces sin entender por completo de lo que estamos hablando.
Para esto, he escrito el siguiente post con el fin de aclarar dudas respecto a estas metodologías y tecnologías que ya son un must en casi todas las compañías que trabajan con equipos de desarrollos tanto en entornos On-Premise como Cloud.</description>
    </item>
    
    <item>
      <title>AWS Database Essentials</title>
      <link>http://siorellana.com/blog/aws/aws-database-essentials-84d963ea-63a4-4a54-bfbd-b19a84fb20a8/</link>
      <pubDate>Sun, 09 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://siorellana.com/blog/aws/aws-database-essentials-84d963ea-63a4-4a54-bfbd-b19a84fb20a8/</guid>
      <description>AWS Database Essentials Cuando se trabaja con bases de datos, existen una serie de términos y conceptos que son necesarios para poder entender las diferencias entre los distintos productos o servicios que se encuentran disponibles en AWS. En este post, revisaremos algunos de estos conceptos para un mejor entendimiento de los post que vengan en el futuro.
Terminología Base de datos relacional  Datos se encuentran estructurados con esquemas. La información se encuentra normalizada y distribuida a través de multiples tablas.</description>
    </item>
    
    <item>
      <title>AWS AutoScaling y Elastic Load Balancer (ELB)</title>
      <link>http://siorellana.com/blog/aws/autoscaling-c2b66cf9-bfa7-4162-90ec-240eb9115128/</link>
      <pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://siorellana.com/blog/aws/autoscaling-c2b66cf9-bfa7-4162-90ec-240eb9115128/</guid>
      <description>Autoscaling Es una de las principales ventajas de utilizar servicios cloud, ya que permite la flexibilidad de usar recursos bajo demanda en base a factores como la carga de un servidor. Quiero aclarar que sí es posible escalar en un ambiente on-premise utilizando las herramientas correctas, pero requiere de una fuerte inversión de infraestructura que debe ser aprovisionada con anterioridad. En cambio al hacerlo en la nube, los recursos ya se encuentran disponible si inversión inicial, sólo pago por uso.</description>
    </item>
    
    <item>
      <title>AWS Virtual Private Cloud (VPC)</title>
      <link>http://siorellana.com/blog/aws/aws-vpc-virtual-private-cloud-d7979c3f-49c3-45ae-9540-a4e56ed2bc8c/</link>
      <pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://siorellana.com/blog/aws/aws-vpc-virtual-private-cloud-d7979c3f-49c3-45ae-9540-a4e56ed2bc8c/</guid>
      <description>AWS VPC Virtual Private Cloud Amazon Virtual Private Cloud (Amazon VPC) permite crear redes virtuales privadas en AWS para comunicar los distintos servicios o instancias EC2 simulando un entorno de red local como en un data center, pero con el beneficio de usar la infraestructura escalable de AWS. Antiguamente (previo a 2013) todas las instancias compartían una red publica y se aislaban mediante reglas de Firewall, pero esto no era óptimo y agregaba complejidad a las arquitecturas de las aplicaciones, por lo que se creó este servicio en el cual cada cliente puede tener su propia red privada y aislada del resto de los clientes.</description>
    </item>
    
    <item>
      <title>AWS Elastic Compute Cloud (EC2)</title>
      <link>http://siorellana.com/blog/aws/aws-ec2-elastic-compute-cloud-dh23-34dd/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://siorellana.com/blog/aws/aws-ec2-elastic-compute-cloud-dh23-34dd/</guid>
      <description>AWS EC2 Elastic Compute Cloud EC2 es el servicio de AWS que permite crear maquinas virtuales en la nube. Para efectos prácticos se llaman instancias, ya que cuando se crea una máquina virtual nueva, en realidad se crea una instancia dentro de un host. Estas instancias están diseñadas para imitar el comportamiento de una maquina física, tal como lo hace VMWare o Hyper-V, pero con la ventaja de poder ser creadas y eliminadas bajo demanda para así lograr la elasticidad, simplicidad y escalabilidad que tienen trabajar con los proveedores de servicios cloud.</description>
    </item>
    
  </channel>
</rss>